name: Build

on:
  #schedule:
    # update the images every morning
    #- cron: "0 0 * * *"
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.actor }}
        runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build & Push lancachenet/ubuntu
        run: |
          git clone https://github.com/lancachenet/ubuntu.git
          cd ubuntu
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-ubuntu --push .
          cd ..
      - name: Build & Push lancachenet/ubuntu-nginx
        run: |
          git clone https://github.com/lancachenet/ubuntu-nginx.git
          cd ubuntu-nginx
          sed -i '1cFROM ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-ubuntu' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-ubuntu-nginx --push .
          cd ..
      - name: Build & Push lancachenet/generic
        run: |
          git clone https://github.com/lancachenet/generic.git
          cd generic
          sed -i '1cFROM ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-ubuntu-nginx' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-generic --push .
          cd ..
      - name: Build & Push lancachenet/monolithic
        run: |
          git clone https://github.com/lancachenet/monolithic.git
          cd monolithic
          sed -i '1cFROM ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-generic' Dockerfile
          cat Dockerfile
          cp ../20_cache.conf overlay/etc/nginx/sites-available/cache.conf.d/root/20_cache.conf
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-monolithic --push .
          cd ..
      - name: Build & Push lancachenet/sniproxy
        run: |
          git clone https://github.com/lancachenet/sniproxy.git
          cd sniproxy
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-sniproxy --push .
          cd ..
      - name: Build & Push lancachenet/lancache-dns
        run: |
          git clone https://github.com/lancachenet/lancache-dns.git
          cd lancache-dns
          sed -i '1cFROM ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-ubuntu' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/lancachenet-lancache-dns --push .
          cd ..
